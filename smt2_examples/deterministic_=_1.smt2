(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun fresh_pf3_is_zero () FF0)
(declare-fun fresh_pf1_is_zero () FF0)
(declare-fun b_def_2_uint () FF0)
(declare-fun b_def_1_uint () FF0)
(declare-fun a_def_2_uint () FF0)
(declare-fun a_def_1_uint () FF0)
(declare-fun fresh_pf2_is_zero_inv () FF0)
(declare-fun fresh_pf0_is_zero_inv () FF0)
(assert
      (let ((let0 fresh_pf3_is_zero))
      (let ((let1 fresh_pf1_is_zero))
      (let ((let2 (= let1 let0)))
      (let ((let3 b_def_2_uint))
      (let ((let4 b_def_1_uint))
      (let ((let5 (= let4 let3)))
      (let ((let6 a_def_2_uint))
      (let ((let7 a_def_1_uint))
      (let ((let8 (= let7 let6)))
      (let ((let9 (and let8 let5)))
      (let ((let10 (as ff0 FF0)))
      (let ((let11 (ff.neg let3)))
      (let ((let12 (ff.add let6 let11)))
      (let ((let13 (ff.mul let0 let12)))
      (let ((let14 (= let13 let10)))
      (let ((let15 (as ff1 FF0)))
      (let ((let16 (ff.neg let0)))
      (let ((let17 (ff.add let16 let15)))
      (let ((let18 fresh_pf2_is_zero_inv))
      (let ((let19 (ff.mul let18 let12)))
      (let ((let20 (= let19 let17)))
      (let ((let21 (and let20 let14)))
      (let ((let22 (ff.neg let4)))
      (let ((let23 (ff.add let7 let22)))
      (let ((let24 (ff.mul let1 let23)))
      (let ((let25 (= let24 let10)))
      (let ((let26 (ff.neg let1)))
      (let ((let27 (ff.add let26 let15)))
      (let ((let28 fresh_pf0_is_zero_inv))
      (let ((let29 (ff.mul let28 let23)))
      (let ((let30 (= let29 let27)))
      (let ((let31 (and let30 let25)))
      (let ((let32 (and let31 let21 let9)))
      (let ((let33 (=> let32 let2)))
      (let ((let34 (not let33)))
      let34
      )))))))))))))))))))))))))))))))))))
  
)
(check-sat)
